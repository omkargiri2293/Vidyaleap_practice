/*
 * Baremetal.h
 *
 *  Created on: 22-Mar-2025
 *      Author: omkar
 */

#ifndef LIB_BAREMETAL_H_
#define LIB_BAREMETAL_H_



// Function to enable power to a specified GPIO port
void enablePort(GPIO_Regs* port);

// Configure a pin as a digital output
void digitalOutputConfig(GPIO_Regs* gpio, uint8_t led_pincm_idx, uint32_t PinNumber);

// Set (turn ON) a GPIO pin
void setPins(GPIO_Regs* gpio, uint32_t pins);
// Clear (turn OFF) a GPIO pin
void clearPins(GPIO_Regs* gpio, uint32_t pins) ;
// Toggle a GPIO pin
void togglePins(GPIO_Regs* gpio, uint32_t pins) ;
// Reset a GPIO port
void PORT_reset(GPIO_Regs* gpio) ;

// Read the state of GPIO pins
uint32_t readPins(GPIO_Regs* gpio, uint32_t pins) ;

// Initialize a digital input pin with specific configurations
void initDigitalInput(uint32_t pincmIndex,
    DL_GPIO_INVERSION inversion, DL_GPIO_RESISTOR internalResistor,
    DL_GPIO_HYSTERESIS hysteresis, DL_GPIO_WAKEUP wakeup) ;
// Reset a GPIO module
void GPIO_reset(GPIO_Regs* gpio) ;



// Enable an interrupt for a specific IRQ number
void EnableIRQ(IRQn_Type IRQn);

// Set the polarity for upper GPIO pins
void setUpperPinsPolarity(GPIO_Regs* gpio, uint32_t polarity);
// Clear the interrupt status for specified GPIO pins
void clearInterruptStatus(GPIO_Regs* gpio, uint32_t pins) ;
// Enable GPIO interrupts for specified pins
void enableInterrupt(GPIO_Regs* gpio, uint32_t pins) ;
// Disable GPIO interrupts for specified pins
void disableInterrupt(GPIO_Regs* gpio, uint32_t pins);
// Get the status of enabled GPIO interrupts
uint32_t getEnabledInterrupts(GPIO_Regs* gpio, uint32_t pins) ;
// Get the status of enabled and pending GPIO interrupts
uint32_t getEnabledInterruptStatus(GPIO_Regs* gpio, uint32_t pins);

// Manually set a GPIO interrupt to be pending
void setInterrupt(GPIO_Regs* gpio, uint32_t pins) ;

// Get the raw interrupt status (even if not enabled)
uint32_t getRawInterruptStatus(GPIO_Regs* gpio, uint32_t pins);

// Get the highest priority pending GPIO interrupt
DL_GPIO_IIDX getPendingInterrupt(GPIO_Regs* gpio) ;



#endif /* LIB_BAREMETAL_H_ */
